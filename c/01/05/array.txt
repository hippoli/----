数组
    什么是数组
    一组具有相同数据类型的数据元素的集合。
    在C语言中，数组可分为：
    一维数组
    二维数组
    三维数组
    ...
    其中最常用的是一维数组，其次二维数组!
    但是，在计算机中，它们的本质都是一维的.

一维数组 
    定义方式：
    
    数据类型名 数组名[整型表达式];

    数据类型名
        不是指数组的类型，而数组中存储的数据元素的类型，可以是任意合法的数据类型(void不行)
    
    数组名 
        用于标识这一组数据，不是某个数据元素的名字
        数组名代表数组首地址

    整型表达式
        表示数组元素的个数
        在传统的C中，要求它为常量或常量表达式

    例： 
        int socres[70]; // 定义了一个可以存储70个整数的整型数组

        
    一组数组的引用
        一般情况下，我们通过数组的下标(或索引)来访问数组中的元素
        数组名[下标]
    下标： 
        C语言约定数组元素的下标从0开始计算
    例： 
        a[0]    数组中下标为0的第一个元素
        a[1]    数组中下标为1的第二个元素
        a[n-1]  数组中下标为n-1的第N个元素
    
    
    一维数组的初始化
        所谓初始化，指在定义数组时，同时把数据写入数组
        一般格式：
            数据类型 数组名[元素个数] = {初始值, ...};
        
        例： 
            int a[5] = {1,2,3,4,5}; // a[0] = 1, a[1] = 2, a[2] = 3, a[3] = 4, a[4] = 5
        也可以对数组进行部分初始化, 那些未初始化的元素，自动置0
            int b[5] = {1,2};       // b[0] = 1, b[1] = 2, b[2] = 0, b[3] = 0, b[4] = 0

        如果在数组初始化时，给所有的元素都提供了初值，则可以省略数组元素的个数，编译器会自动根据初值个数，推导出数组元素的个数
            int c[] = {1,2,3,4,5}; // int c[5] = {1,2,3,4,5};

        最常用的数组初始化方式：
        int a[70] = {0};

        int b[5];
        b[5] = {1,2,3,4,5}; // error!!!!



    练习： 
        定义一个整型数组，其中可以存储70个整数
        往数组中随机的写入100以内的值
        最后，输出查看结果。


        定义一个int类型的数组，要计算该数组中的最小值，最大值 及 所有元素之和
        定义一个double类型的数组，要得到其中最大值的下标
        定义一个doulbe类型的数组，计算最大值与最小值的差值。
        定义一个int类型的数组，并赋值，判断该数组中的元素是不是递增的

    冒泡排序:
        对数组的相邻元素,两两比较,如某个元素比后面的元素大,交换他们的值
        一趟排序后,最大的元素就到达最后面了
        重复n趟(数组元素个数),完成排序

